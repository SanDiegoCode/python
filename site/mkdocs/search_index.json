{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Python\n\n\nHere you will learn the basics of python.\n\n\nFAQs\n\n\n\n\nWhere do I run the code?\n\n\nYou can either \ninstall python\n  (Windows, Mac, and Linux) or \ncode online with CodeSkulptor\n (All Platforms ) \n\n\n\n\n\n\nWhat if I need help?\n \n\n\nWe're only \nan email\n away :D\n\n\n\n\n\n\nWhat if I'm not a part of SD Code?\n \n\n\nDon't worry about it! This resource is free to use by anyone!\n\n\n\n\n\n\nCan I host this on my website?\n\n\nSure, as long as you give credit and link it to our website", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-python", 
            "text": "Here you will learn the basics of python.", 
            "title": "Welcome to Python"
        }, 
        {
            "location": "/#faqs", 
            "text": "Where do I run the code?  You can either  install python   (Windows, Mac, and Linux) or  code online with CodeSkulptor  (All Platforms )     What if I need help?    We're only  an email  away :D    What if I'm not a part of SD Code?    Don't worry about it! This resource is free to use by anyone!    Can I host this on my website?  Sure, as long as you give credit and link it to our website", 
            "title": "FAQs"
        }, 
        {
            "location": "/lesson1/", 
            "text": "Welcome! \n\n\nIn our first lesson here we will be focusing on learning about \nvariables\n and \ndata types\n. \nLet's jump right in. \n\n\nSo what exactly is a variable? You can think of variables as a box where you can store a value. A \nvalue\n is information that is related a certain variable. \n\n\nstatement = \"Hello\"\n\n\n\nNow, we have a variable called statement, with the message \"Hello\" stored inside. Making variables is pretty simple in Python. Let's print that statement now:\n\n\nprint(statement)\n\n\n\nWhen you run your program, \"Hello\" should have been printed out. \nYou can create whatever variables you want, but there are a couple rules that you need to follow when naming your variables:\n\n\n\n\n\n\nVariable names cannot start with a number. Variable names can also only contain letters, numbers, and underscores. \n\n\n\n\n\n\nNo spaces should be in your variable names.\n\n\n\n\n\n\nThere are some words that Python has kept for programming functions or keywords, like for, not, try, as, if, and more. You cannot use those words when naming your variables.\n\n\n\n\n\n\nAlright, now that we know the rules, let's learn about the different types of data. Programs deal with data a lot, so it's a good idea to understand the different types of data in Python.\n\n\nStrings:\n A string is a series of characters. The way you declare, or create a string is just like how we made the variable, statement from earlier; by placing whatever message we want to have in \"quotation marks\". \n\n\n\"String\"\n\n\n\nIntegers:\n In Python, we can multiply, divide, add, and subtract integers with ease. \n\n\n2*5 \n10\n\n2/1\n2\n\n2+5\n7\n\n2-1\n1\n\n\n\nFloats:\n These are numbers with decimal points. We can peform similar operations(+, -, *, /) on floats like we could on integers, without too much trouble.\n\n\n0.2 + 1.3\n1.5\n\n\n\nHowever, we may get a large number of decimal places in the answers to our calculations. Just try to ignore them for now, all Python is doing is trying to give us the most exact number.\n\n\n0.2 + 0.1\n.3000000004\n\n\n\nAlright, now we know about a couple of different data types in Python. Now let's see what we can do with that data. \n\n\nA \nmethod\n, is an action that the programming language you are using, whether it be Python or Java, can perform on a certain piece of data.\n\n\nFor example, let's say that I made a string, and I wanted to change the case(A or a) of certain letters in that string. I could use a couple of different methods to make that happen.\n\n\nmyName = \"ted martinez\"\nprint(myName.title())\n\n\n\nThe method I used is title(). When I use that method, this is what Python prints out.\n\n\nTed Martinez\n\n\n\nThat small dot in front of the word title, is what makes the title() method act on the variable, myName. Sometimes, certain methods will need more information to act, that is why there are parentheses following the word title. \n\n\nHere are some other methods you can use to change your strings.\n\n\nprint(myName.lower())\nprint(myName.upper())\n\n\n\nHere is what prints out:\n\n\nted martinez\nTED MARTINEZ\n\n\n\nYou can also combine strings together, using the + sign, as shown below.\n\n\nfirst_name = \"Ted\"\nlast_name = \"Martinez\"\nfull_name = first_name + \" \" +  last_name\nprint(full_name)\n\n\n\nWe added an extra \" \" so that there could be a space between the first name and the last name.\nPython should print this out:\n\n\n\"Ted Martinez\"\n\n\n\nIf you ever want to add a tab to your text, you can add \\t when printing out a string.\n\n\nprint(\"Hello\")\nprint(\"\\tHello\")\n\n\n\nThis should print out:\n\n\nHello\n    Hello\n\n\n\nYou can also have a string break into a new line by using \\n.\n\n\nprint(\"Hello\\nMy name is\\nTed\")\n\n\n\nThis should print out:\n\n\nHello\nMy name is\nTed", 
            "title": "Lesson 1"
        }
    ]
}